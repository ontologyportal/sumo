;
;  Copyright (C) 2002 Michal Sevcenko
;
;  This program is free software; you can redistribute it and/or
;  modify it under the terms of the GNU Lesser General Public
;  License as published by the Free Software Foundation; either
;  version 2.1 of the License, or (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;  Lesser General Public License for more details.
;
;  You should have received a copy of the GNU Lesser General Public
;  License along with this program; if not, write to the Free Software
;  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
;

; This file contains definitions of auxiliary predicates that help to
; define language representations of predicates defined within SUMO.
; The 'engFormat' binary predicate associates a concept (either relation or
; a function with a string. When there is a need to visualise certain
; concept in natural language, the associated string is used. The string
; generally contains a natural language description of the concept, but
; it may contain special tags which are interpreted with the browser.
; The description of these tags follows:
; &%token - specifies a token that will be made into a hypertext link
;    to concept being visualized
; %1, %2, ... - this tag will be substituted with a natural language
;    representation of the concept's respective argument
; %n{text} will be replaced either with empty string, if a predicate
;    is being rendered as positive, or 'text' otherwise; the %n tag
;    can be used as a shortcut for %n{not}
; %p{text} replaced with 'text' for positive rendering and with an
;    empty string for negative rendering
; %*{range}[delim] will be replaced with a list of natural-language
;    representation of a subset of arguments; range specifies which
;    arguments will be included - it is a comma separated list of
;    numbers or ranges; for example, range '1-4,6' denotes first,
;    second, third, fourth and sixth argument; the delim parameter
;    specifies the delimiter which will be used to separate representations
;    of arguments; both {range} and [delim] may be ommited - range
;    defaults to all arguments, and delim defaults to a single space
; %% will be replaced with a single percent character

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; BAS ONTOLOGY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations
; Relationer

(format sv agent "%1 är %n{inte} en &%agent till %2")
(format sv attribute "%2 är %n{inte} ett &%attribut på %1")
(format sv believes "%1 &%believe %n{inte} %2")
(format sv between "%2 ligger %n{inte} &%mellan %1 och %3")
(format sv capability "%3 är %n{inte} &%kapabel till att %1 rollen %2")
(format sv causes "%1 &%orsakar %n{inte} %2")
(format sv closedOn "%1 är %n{inte} &%sluten över %2")
(format sv component "%1 är %n{inte} en &%komponent till %2")
(format sv conditionalProbability "&%sannolikheten för %1 givet att %2 gäller är %n{inte} %3")
(format sv considers "%1 &%överväger %n{inte} %2")
(format sv containsInformation "%1 &%innehåller %n{inte} informationen %2")
(format sv copy "%1 är %n{inte} en exakt &%kopia av %2")
(format sv decreasesLikelihood "%1 &%minskar %n{inte} sannolikheten för %2")
(format sv desires "%1 &%önskar %n{inte} %2")
(format sv destination "%1 &%slutar %n{inte} vid %2")
(format sv distributes "%1 är %n{inte} en &%distributiv över %2")
(format sv documentation "%2")
(format sv equivalenceRelationOn "%1 är %n{inte} en &%ekvivalensrelation till %2")
(format sv exactlyLocated "%1 är %n{inte} &%lokaliserad exakt vid %2")
(format sv experiencer "%2 &%upplever %n{inte} %1")
(format sv exploits "%1 &%upplever %n{inte} %2")
(format sv faces "%1 faces %2")			 ;TODO
(format sv greaterThan "%1 är %n{inte} &%större än %2")
(format sv greaterThanOrEqualTo "%1 är %n{inte} &%större än eller lika med %2")
(format sv hasPurpose "%1 har %n{inte} &%syftet %2")
(format sv hasPurposeForAgent "%1 har &n &%syftet %2 för %3")
(format sv hasSkill "%2 har &n &%färdigheten att %1")
(format sv holdsDuring "%2 gäller %n{inte} &%under tiden som %1")
(format sv holdsRight "%2 har %n{inte} rättigheten att utföra %1")
(format sv increasesLikelihood "%1 &%ökar %n{inte} sannolikheten för %2")
(format sv independentProbability "sannolikheten för %1 och %2 är %n{inte} &%oberoende")
(format sv initialList "%1 &%börjar %n{inte} med %2")
(format sv inList "%1 är %n{inte} en &%medlem i %2")
(format sv inScopeOfInterest "%1 är %n{inte} &%intresserad av %2")
(format sv instrument "%2 är %n{inte} ett &%instrument för %1")
(format sv irreflexiveOn "%1 är %n{inte} &%irreflexiv över %2")
(format sv knows "%1 &%vet %n{inte} %2")
(format sv lessThan "%1 är %n{inte} &%mindre än %2")
(format sv lessThanOrEqualTo "%1 är %n{inte} &%mindre än eller lika med %2")
(format sv located "%1 &%ligger %n{inte} vid %2")
(format sv manner "%1 utförs %n{inte} på sättet %2")
(format sv material "%1 är %n{inte} &%gjord av %2")
(format sv member "%1 är %n{inte} en &%medlem av %2")
(format sv needs "%1 &%behöver %n{inte} %2")
(format sv notices "%1 &%märker %n{inte} %2")
(format sv origin "%1 &%kommer %n{inte} från %2")
;		      "%1 &%härstammar %n{inte} från %2"))
(format sv part "%1 är %n{inte} en &%del av %2")
(format sv partialOrderingOn "%1 är %n{inte} en &%partiell ordning över %2")
(format sv partlyLocated "%1 ligger %n{inte} &%delvis i %2")
(format sv patient "%2 är %n{inte} en &%patient till %1")
(format sv piece "%1 är %n{inte} en &%bit av %2")
;		     "%1 är %n{inte} en &%del av %2"))
(format sv possesses "%1 &%har %n{inte} %2")
;			 "%1 &%äger %n{inte} %2"))
(format sv prefers "%1 &%föredrar %n{inte} %2 framför %3")
;		       "%1 &%föredrar %n{inte} %2 över %3"))
(format sv probability "&%sannolikheten för %1 är %n{inte} %2")
(format sv properPart "%1 är %n{inte} en &%riktig &%del av %2")
(format sv property "%1 har %n{inte} &%egenskapen %2")
(format sv reflexiveOn "%1 är %n{inte} &%reflexiv över %2")
(format sv resource "%2 är %n{inte} en &%resurs för %1")
(format sv result "%2 är %n{inte} ett &%resultat av %1")
(format sv subCollection "%1 är %n{inte} en riktig &%subsamling av %2")
(format sv subProposition "%1 är %n{inte} en &%sub-proposition av %2")
(format sv subList "%1 är %n{inte} en &%dellista av %2")
(format sv time "%1 existerar%p{s} %n{inte} &%under %2")
(format sv totalOrderingOn "%1 är %n{inte} &%total &%ordning över %2")
(format sv trichotomizingOn "%1 en %n{inte} &%trichotomisering över %2")
(format sv true "%1 &%är %n{inte} %2")
(format sv wants "%1 &%vill %n{inte} ha %2")
(format sv confersObligation "%2 &%förpliktar %n{inte} %3 till att utföra uppgift av typen %1")
(format sv confersRight "%2 &%tillåter %n{inte} %3 att utföra uppgifter av typen %1")
(format sv crosses "%1 &%korsar %n{inte} %2")
(format sv equivalentContentClass "%1 är %n{inte} &%ekvivalent med %2")
(format sv equivalentContentInstance "%1 är %n{inte} &%ekvivalent med %2")
(format sv expressedInLanguage "%1 &%uttrycks %n{inte} i språlet %2")
(format sv holdsObligation "%2 är %n{inte} &%skyldig att utföra uppgifter av typen %1")
(format sv inhibits "%1 &%hämmar %n{inte} %2")
(format sv penetrates "%1 &%penetrerar %n{inte} %2")
(format sv precondition "%1 är %n{inte} en &%förutsättning för %2")
(format sv prevents "%1 &%förhindrar %n{inte} förekomsten av %2")
(format sv realization "%1 &%uttrycker %n{inte} innehållet i %2")
(format sv refers "%1 innehåller %n{inte} en &%referens till %2")
(format sv represents "%1 &%uttrycker %n{inte} %2")
(format sv representsForAgent "%3 &%använder %n{inte} %1 för att stå för %2")
(format sv representsInLanguage "%1 &%representerar %n{inte} %2 i språket %3")
(format sv subPlan "%1 är %n{inte} en &%delplan av %2")
(format sv subsumesContentClass "%1 &%tar %n{inte} &%ut innehållet i %2")
(format sv subsumesContentInstance "%1 &%tar %n{inte} &%ut innehållet i %2")
(format sv traverses "%1 &%traverserar %n{inte} %2")
(format sv uses "%2 &%använder %n{inte} %1")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv AbstractionFn "&%beskrivningen av %1")
(format sv BackFn "&%baksidan av %1")
(format sv ExtensionFn "&%klassen som motsvarar %1")
(format sv FrontFn "&%framsidan av %1")
(format sv ListFn "(%*[,])")
(format sv ListOrderFn "%2:a &%elementet i %1")
(format sv ListLengthFn "&%längden av %1")
(format sv ListConcatenateFn "&%listan sammansatt av %1 och %2")
(format sv PropertyFn "&%tillhörigheter av %1")
(format sv ProbabilityFn "&%sannolikheten för %1")
(format sv WhereFn "den plats &%där %1 var vid %2")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; STRUKTURELL ONTOLOGY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations
; Relationer

(format sv contraryAttribute "%1 är %n{inte} &%emot %2")
(format sv disjoint "%1 är %n{inte} &%disjunkt med %2")
(format sv disjointDecomposition "%1 är %n{inte} &%disjunkt &%nedbrutet till %*{2-}[,]")
(format sv disjointRelation "%1 och %2 är %n{inte} &%disjunkta")
(format sv domain "nummer %2 argumentet till %1 är %n{inte} en &%instans av %3")
(format sv domainSubclass "nummer %2 argumentet till %1 är %n{inte} en &%subklass till %3")
(format sv entails "%1 &%medför %n{inte} %2")
; (format sv equal "%1 är %n{inte} &%lika med %2")
(format sv exhaustiveDecomposition "%1 är %n{inte} &%täckt av %*{2-}[,]")
;				       "%1 är &%täcks %n{inte} av %*{2-}[,]"))
(format sv holds "%1(%*{2-}[,]) &%gäller %n{inte}")
(format sv immediateInstance "%1 är %n{inte} en &%direkt &%instans av %2")
(format sv immediateSubclass "%1 är %n{inte} en &%direkt &%subklass till %2")
(format sv instance "%1 är %n{inte} en &%instans av %2")
(format sv inverse "%1 är %n{inte} en &%inverse till %2")
;                       "%1 är %n{inte} &%inversen till %2"))
(format sv name "%2 har %n{inte} &%namnet %1")
(format sv partition "%1 är %n{inte} &%partiellt &%delad i %*{2-}[,]")
(format sv range "&%värdemängden för %1 är %n{inte} en instans av %2")
(format sv relatedInternalConcept "%1 är %n{inte} &%internt relaterat till %2")
(format sv subAttribute "%1 är %n{inte} ett &%underattribut till %2")
(format sv subclass "%1 är %n{inte} en &%subclass till %2")
(format sv subrelation "%1 är %n{inte} en &%subrelation till %2")
(format sv successorAttribute "%1 är %n{inte} ett direkt &%efterföljande &%attribut till %2")
(format sv successorAttributeClosure "%1 är %n{inte} ett &%efterföljande &%attribut till %2")
(format sv valence "%1 %&tar %n{inte} %2 &%argument")
;		       "%1 %&har %n{inte} %2 &%argument"))
(format sv rangeSubclass "värdena som returneras av %1 är %n{inte} &%subklasser till %2")
(format sv relatedExternalConcept "&%konceptet %1 i språket %3 är %n{inte} &%relaterat till konceptet %2")
(format sv subsumedExternalConcept "&%konceptet %1 i språket %3 är %n{inte} &%inordnat i konceptet %2")
(format sv subsumingExternalConcept "&%konceptet %1 i språket %3 &%inordnar %n{inte} konceptet %2")
(format sv synonymousExternalConcept "&%konceptet %1 i språket %3 är %n{inte} &%synonymt med konceptet %2")
(format sv uniqueIdentifier "den &%unika &%identifieraren för %1 är %n{inte} %2")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv DomainFn "&%domänen för %1")
;			"&%definitionsmängden för %1"))
(format sv RangeFn "&%omfånget för %1")
;		       "&%värdemängden för %1"))
(format sv AssignmentFn "%1(%*{2-}[,])")
(format sv PowerSetFn "alla &%subklasser till %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MEREOTOPOLOGY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv bottom "&%botten av %2 är %n{inte} %1")
;		      "%1 är %n{inte} &%botten av %2"))
(format sv connected "%1 är %n{inte} &%sammanlänkad med %2")
(format sv connects "%1 &%sammanlänkar %n{inte} %2 och %3")
(format sv meetsSpatially "%1 &%möter %n{inte} %2")
(format sv overlapsSpatially "%1 &%överlappar %n{inte} med %2")
(format sv overlapsPartially "%1 &%överlappar %n{inte} &%delvis med %2")
(format sv superficialPart "%1 är %n{inte} en &%ytlig &%del av %2")
(format sv surface "%1 är %n{inte} en &%yta av %2")
(format sv interiorPart "%1 är %n{inte} en &%inre &%del av %2")
(format sv hole "%1 är %n{inte} ett &%hål i %2")
(format sv fills "%1 &%fyller %n{inte} %2")
(format sv completelyFills "%1 &%fyller %n{inte} &%fullständigt %2")
(format sv partiallyFills "%1 &%fyller %n{inte} &%delvis %2")
(format sv properlyFills "%1 &%fyller %n{inte} &%korrekt %2")
(format sv side "en &%sida av %2 är %n{inte} %1")
;		    "%1 är %n{inte} en &%sida av %2"))
(format sv top "&%toppen av %2 är %n{inte} %1")
;		   "%1 är %n{inte} &%toppen av %2"))

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv MereologicalSumFn "&%unionen av delarna av %1 och %2")
(format sv MereologicalProductFn "&%snittet av delarna av %1 och %2")
(format sv MereologicalDifferenceFn "&%differensen mellan delarna av %1 och %2")
(format sv PrincipalHostFn "&%värden till hålet %1")
(format sv SkinFn "&%ytan till hålet av %1")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; TEMPORAL CONCEPTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv duration "&%varaktigheten av %1 är %n{inte} %2")
(format sv frequency "%1 &%inträffar %n{inte} varje %2")
;			 "%1 &%händer %n{inte} varje %2"))
(format sv temporalPart "%1 är %n{inte} en &%del av %2")
(format sv starts "%1 &%påbörjar %n{inte} %2")
(format sv finishes "%1 &%avslutar %n{inte} %2")
(format sv before "%1 inträffar %n{inte} &%före %2")
;		      "%2 inträffar %n{inte} &%efter %1"))
(format sv beforeOrEqual "%1 inträffar %n{inte} &%före eller &%vid %2")
;			     "%2 inträffar %n{inte} &%efter eller &%vid %1"))
(format sv temporallyBetween "%2 &%ligger %n{inte} mellan %1 och %3")
(format sv temporallyBetweenOrEqual "%2 &%ligger %n{inte} mellan eller vid %1 och %3")

(format sv overlapsTemporally "%2 &%överlappar %n{inte} %1")
(format sv during "%1 &%ägde %n{inte} &%rum under %2")
(format sv meetsTemporally "%1 &%möter %n{inte} %2")
(format sv earlier "%1 sker %n{inte} &%tidigare än %2")
(format sv cooccur "%1 sker %n{inte} samtidigt som %2")
;		       "%1 sker %n{inte} vid samma tidpunkt som %2"))
(format sv date "&%datum för %1 är %n{inte} %2")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv TemporalCompositionFn "&%dekomposition av %1 till %3 %2s")
(format sv BeginFn "början på %1")
(format sv EndFn "slutet på %1")
(format sv TimeIntervalFn "&%intervallet mellan %1 och %2")
(format sv WhenFn "tiden då %1 existerade")
;		      "existerande tid för %1"))
(format sv PastFn "&%före %1")
(format sv ImmediatePastFn "&%omedelbart &%före %1")
(format sv FutureFn "&%efter %1")
(format sv ImmediateFutureFn "&%omedelbart &%efter %1")
(format sv YearFn "&%året %1")
(format sv MonthFn "&%månaden %1")
(format sv DayFn "&%dagen %1")
(format sv HourFn "&%timmen %1")
(format sv MinuteFn "&%minuten %1")
(format sv SecondFn "&%sekunden %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SET/CLASS THEORY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv subset "%1 är %n{inte} en &%delmängd av %2")
(format sv element "%1 är %n{inte} ett &%element av %2")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv UnionFn "&%unionen av %1 och %2")
(format sv IntersectionFn "&%snittet av %1 och %2")
(format sv RelativeComplementFn "&%differensen mellan %1 och %2")
(format sv ComplementFn "&%komplementet till %1")
(format sv GeneralizedUnionFn "&%unionen av alla element i %1")
(format sv GeneralizedIntersectionFn "&%snittet av alla element i %1")
(format sv CardinalityFn "antalet &%instanser av %1")
(format sv KappaFn "&%klassen som beskrivs av %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; OBJECTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv developmentalForm "&%utvecklingsformen för %1 är %2")
(format sv inhabits "%1 &%lever %n{inte} i %2")
(format sv parent "%2 är %n{inte} en &%förälder till %1")
;		      "%1 har %n{inte} &%föräldern %2"))
(format sv mother "%2 är %n{inte} en &%mamma till %1")
;		      "%1 har %n{inte} &%mamman %2"))
(format sv father "%2 är %n{inte} en &%pappa till %1")
;		      "%1 har %n{inte} &%pappan %2"))
(format sv sibling "%2 är %n{inte} ett &%syskon till %1")
;		       "%1 har %n{inte} &%syskonet %2"))
(format sv authors "%1 är %n{inte} &%författaren till %2")
(format sv editor "%1 är %n{inte} &%redaktören för %2")
(format sv publishes "%1 &%publiserar %n{inte} %2")
(format sv version "%1 är %n{inte} en &%version av %2")
(format sv engineeringSubcomponent "%1 är %n{inte} en &%komponent av %2")
(format sv connectedEngineeringComponents "%1 är %n{inte} &%ansluten till %2")
;					      "%1 är %n{inte} &%sammankopplad med %2"))
(format sv connectsEngineeringComponents "%1 &%ansluter %n{inte} %2 och %3")
;					     "%1 &%sammankopplar %n{inte} %2 och %3"))
(format sv familyRelation "%1 och %2 är &%släkt")
(format sv employs "%1 &%anställer %n{inte} %2")
(format sv subOrganizations "%1 är %n{inte} en &%del av organisationen %2")
(format sv occupiesPosition "%1 har %n{inte} &%positionen %2 i %3")
(format sv citizen "%1 är %n{inte} en &%medborgare i %2")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv EditionFn "&%upplaga %2 av %1")
(format sv SeriesVolumeFn "volym %2 i &%serien %1")
(format sv PeriodicalIssueFn "&%periodnumret %2 av %1")
(format sv OrganizationFn "den &%juridiska &%organisatoriska &%enheten av %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; PROCESSES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv subProcess "%1 är %n{inte} en &%delprocess av %2")
(format sv path "%2 är en väg längs med %1 %n{inte} inträffar")
;		    "%1 inträffar %n{inte} längs med %2"))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; QUALITIES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv orientation "%1 är %n{inte} %3 till %2")
(format sv direction "entiteter i processen %1 &%flyttas %2") ;DONE?
(format sv birthTime "%1 &%föddes %n{inte} vid %2")
(format sv deathTime "%1 &%dog %n{inte} vid %2")
(format sv modalAttribute "påståendet %1 har den &%modala &%kraften av %2") ;DONE?

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv RelativeTimeFn "tiden %1 i zon %2")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; UNITS OF MEASURE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv measure "&%mätningen av %1 är %n{inte} %2")
(format sv altitude "&%altituden av %1 är %n{inte} %2")
(format sv age "&%åldern på %1 är %n{inte} %2")
(format sv length "&%längden av %1 är %n{inte} %2")
(format sv width "&%bredden av %1 är %n{inte} %2")
(format sv diameter "&%diametern på %1 är %n{inte} %2")
(format sv height "&%höjden på %1 är %n{inte} %2")
;		   "&%höjden av %1 är %n{inte} %2"))
(format sv distance "&%avståndet mellan %1 och %2 är %3")
(format sv larger "%1 är %n{inte} &%större än %2")
(format sv smaller "%1 är %n{inte} &%mindre än %2")
(format sv monetaryValue "&%värdet av %1 är %n{inte} %2")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv MeasureFn "%1 %2(s)")
(format sv KiloFn "1 &%tusen %1s")
(format sv MegaFn "1 &%miljon %1s")
(format sv GigaFn "1 &%miljard %1s ")
(format sv TeraFn "1 &%biljon %1s")
(format sv MilliFn "en &%tusendel av %1")
(format sv MicroFn "en &%miljondel av %1")
(format sv NanoFn "en &%miljarddel av %1")
(format sv PicoFn "en &%biljondel av %1")
(format sv IntervalFn "&%intervallet från %1 till %2")
(format sv RecurrentTimeIntervalFn "den &%återkommande &%perioden från %1 till %2")
(format sv MagnitudeFn "&%magnituden av %1")
(format sv DensityFn "%1 &%per %2")
(format sv SpeedFn "%1 &%per %2")
(format sv VelocityFn "%1 &%per %2 i %3 i riktning %4")
(format sv WealthFn "&%värdet av tillhörigheterna av %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; NUMERIC FUNCTIONS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format sv identityElement "%2 är %n{inte} ett &%identitetselement av %1")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv MultiplicationFn "%*[*]")
(format sv AdditionFn "(%*[+])")
(format sv SubtractionFn "(%*[-])")
(format sv DivisionFn "%*[/]")
(format sv AbsoluteValueFn "&%absolutbeloppet av %1")
(format sv ArcCosineFn "&%arccosinus av %1")
			   ; "&%arccos(%1)"))
(format sv ArcSineFn "&%arcsinus av %1")
;			 "&%arcsin(%1)"))
(format sv ArcTangentFn "&%arctangens av %1")
;			    "&%arctan(%1)"))
(format sv CeilFn "det &%minsta heltalet större än eller lika med %1")
(format sv CosineFn "&%cosinus av %1")
;			"&%cos(%1)"))
(format sv DenominatorFn "&%nämnaren av %1")
(format sv ExponentiationFn "%1 upphöjt till &%exponenten %2")
(format sv FloorFn "det &%största heltalet mindre än eller lika med %1")
(format sv GreatestCommonDivisorFn "den &%största gemensamma delaren av %*[and]")
(format sv ImaginaryPartFn "den &%imaginära delen av %1")
(format sv IntegerSquareRootFn "&%heltalskvadratroten av %1")
(format sv LeastCommonMultipleFn "den &%största gemensamma multipeln av %*[and]")
(format sv LogFn "&%logaritmen av %1")
(format sv MaxFn "den &%större av %1 och %2")
;		     "den &%största av %1 och %2"
;		     "&%maximum av %1 och %2"
;		     "&%max(%1,%2)"))
(format sv MinFn "den &%mindre av %1 och %2")
;		     "den &%minsta av %1 och %2"
;		     "&%minimum av %1 och %2"
;		     "&%min(%1,%2)"))
(format sv NumeratorFn "&%täljaren av %1")
(format sv RationalNumberFn "den &%rationella representationen av %1")
(format sv RealNumberFn "den &%reella delen av %1")
;			    "&%realdelen av %1"))

;; https://sv.wikipedia.org/wiki/Reciprok_(matematik)
(format sv ReciprocalFn "&%reciproken av %1")
;			    "&%inversen av %1"))

(format sv RemainderFn "%1 &%modulo %2")
(format sv RoundFn "%1 &%avrundat till närmaste heltal")
(format sv SignumFn "&%tecknet på %1")
(format sv SineFn "&%sinus av %1")
(format sv SquareRootFn "&%kvadratroten av %1")
(format sv TangentFn "&%tangens av %1")
(format sv IdentityFn "%1")
(format sv SuccessorFn "(%1+1)")
(format sv PredecessorFn "(%1+2)")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; GRAPH THEORY
; GRAFTEORI
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations
; Relationer

(format sv links "%3 &%länkar %n{inte} ihop %1 och %2")
(format sv graphPart "%1 är %n{inte} en &%del av %2")
(format sv subGraph "%1 är %n{inte} en &%subgraph av %2")
(format sv pathLength "&%längden av %1 är %n{inte} %2")
(format sv arcWeight "&%värdet av %1 är %2")

;;;;;;;;;;;;;;;;;;
; Functions
; Funktioner

(format sv InitialNodeFn "den &%initiala noden för %1")
(format sv TerminalNodeFn "den &%terminerande noden för %1")
(format sv BeginNodeFn "&%början för %1")
;			   "&%startnoden för %1"))
(format sv EndNodeFn "&%slutet för %1")
;			 "&%slutnoden för %1"))
(format sv PathWeightFn "&%värdet av %1")
(format sv MinimalWeightedPathFn "den &%minsta &%kostsamma &%vägen mellan %1 och %2")
;				     "&%kortaste &%vägen mellan %1 och %2"))
(format sv MaximalWeightedPathFn "den &%mest &%kostsamma &%vägen mellan %1 och %2")
;				     "&%längsta &%vägen mellan %1 och %2"))
(format sv GraphPathFn "&%mängden av &%vägar mellan %1 och %2")
(format sv CutSetFn "&%mängden av &%vägar som &%partitionerar %1 i två separata grafer")
(format sv MinimalCutSetFn  "minimala &%mängden av vägar some &%partitionerar %1 i två separata grafer")
