;
;  Copyright (C) 2002 Michal Sevcenko
;
;  This program is free software; you can redistribute it and/or
;  modify it under the terms of the GNU Lesser General Public
;  License as published by the Free Software Foundation; either
;  version 2.1 of the License, or (at your option) any later version.
;
;  This program is distributed in the hope that it will be useful,
;  but WITHOUT ANY WARRANTY; without even the implied warranty of
;  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;  Lesser General Public License for more details.
;
;  You should have received a copy of the GNU Lesser General Public
;  License along with this program; if not, write to the Free Software
;  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
;

; This file contains definitions of auxiliary predicates that help to
; define language representations of predicates defined within SUMO.
; The 'format' binary predicate associates a concept (either relation or
; a function) with a string. When there is a need to visualise certain
; concept in natural language, the associated string is used. The string
; generally contains a natural language description of the concept, but
; it may contain special tags which are interpreted with the browser.
; The description of these tags follows:
;
; &%token - specifies a token that will be made into a hypertext link
;    to concept (relation, function) being visualized
; %1, %2, ... - this tag will be substituted with a natural language
;    representation of the concept's respective argument; if the argument
;    is comound (not atomic, like variable or class), it is enclosed in
;    parentheses, unless the tag is postfixed with an apostrof (like %2')
; %1a{text}, %2a{text}, ... will be replaced with text, if the respective
;    argument is atomic, or with an empty string otherwise
; %1c{text}, %2c{text}, ... will be replaced with text, if the respective
;    argument is compound, or with an empty string otherwise
; %n{text} will be replaced either with an empty string, if a predicate
;    is being rendered as positive, or 'text' otherwise; the %n tag
;    can be used as a shortcut for %n{not}
; %p{text} replaced with 'text' for positive rendering and with an
;    empty string for negative rendering
; %*{range}[delim] will be replaced with a list of natural-language
;    representation of a subset of arguments; range specifies which
;    arguments will be included - it is a comma separated list of
;    numbers or ranges; for example, range '1-4,6' denotes first,
;    second, third, fourth and sixth argument; the delim parameter
;    specifies the delimiter which will be used to separate
;    representations of arguments; both {range} and [delim] may be omited
;    - range defaults to all arguments, and delim defaults to a single
;    space
; %% will be replaced with a single percent character
;
; Note: the translation is incomplete, some terms remain in english
; Note: this file is in windows-1250 encoding

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; BASE ONTOLOGY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz part "%1 %p{je} %n{nen�} &%��st� %2")
(format cz properPart "%1 %p{je} %n{nen�} &%vlastn� ��st� %2")
(format cz piece "%1 %p{je} %n{nen�} a &%piece of %2")
(format cz component "%1 %p{je} %n{nen�} a &%component of %2")
(format cz material "%1 %p{je} %n{nen�} &%z %2")
(format cz member "%1 %p{je} %n{nen�} a &%�lenem %2")
(format cz subCollection "%1 %p{je} %n{nen�} a proper &%sub-collection of %2")
(format cz containsInformation "%1 %n{doesn't} &%contain%p{s} information %2")
(format cz property "%1 %n{ne}m� &%atribut %2")
(format cz attribute "%2 %p{je} %n{nen�} &%atributem %1")
;manner
(format cz true "%1 &%is %n %2")
(format cz lessThan "%1 %p{je} %n{nen�} &%men�� ne� %2")
(format cz greaterThan "%1 %p{je} %n{nen�} &%v�t�� ne� %2")
(format cz lessThanOrEqualTo "%1 %p{je} %n{nen�} &%men�� ne� nebo roven %2")
(format cz greaterThanOrEqualTo "%1 %p{je} %n{nen�} &%v�t�� ne� nebo roven %2")
(format cz agent "%2 %p{je} %n{nen�} &%p�vodcem %1")
(format cz destination "%1 &%%n{ne}kon�� v %2")
(format cz experiencer "%2 &%%n{ne}prod�l�v� %1")
(format cz instrument "%2 %p{je} %n{nen�} &%n�strojem for %1")
(format cz origin "%1 &%%n{ne}za��n� v %2")
(format cz patient "%2 %p{je} %n{nen�} &%��astn�kem %1")
(format cz resource "%2 %p{je} %n{nen�} &%n�strojem pro %1")
(format cz result "%2 %p{je} %n{nen�} &%v�sledkem %1")
(format cz probability "&%probability of %1 %p{je} %n{nen�} %2")
(format cz conditionalProbability "&%probability of %1 provided that %2 holds %p{je} %n{nen�} %3")
(format cz increasesLikelihood "%1 %n{doesn't} &%increase%p{s} likelihood of %2")
(format cz decreasesLikelihood "%1 %n{doesn't} &%decrease%p{s} likelihood of %2")
(format cz independentProbability "probability of %1 and %2 %p{je} %n{nen�} &%independent")
(format cz prefers "%1 %n{doesn't} &%prefer%p{s} %2 over %3")
(format cz inScopeOfInterest "%1 %p{je} %n{nen�} &%interested in %2")
(format cz notices "%1 %n{doesn't} &%notice%p{s} %2")
(format cz needs "%1 %n{doesn't} &%need%p{s} %2")
(format cz wants "%1 %n{doesn't} &%want%p{s} %2")
(format cz desires "%1 %n{doesn't} &%desire%p{s} %2")
(format cz considers "%1 %n{doesn't} &%consider%p{s} %2")
(format cz believes "%1 %n{doesn't} &%believe%p{s} %2")
(format cz knows "%1 %n{doesn't} &%know%p{s} %2")

(format cz inList "%1 %p{je} %n{nen�} a &%member of %2")
(format cz subList "%1 %p{je} %n{nen�} a &%sublist of %2")
(format cz initialList "%1 %n{doesn't} &%start%p{s} %2")
(format cz closedOn "%1 %p{je} %n{nen�} &%closed on %2")
(format cz reflexiveOn "%1 %p{je} %n{nen�} &%reflexive on %2")
(format cz irreflexiveOn "%1 %p{je} %n{nen�} &%irreflexive on %2")
(format cz partialOrderingOn "%1 %p{je} %n{nen�} &%partial ordering on %2")
(format cz totalOrderingOn "%1 %p{je} %n{nen�} &%total ordering on %2")
(format cz trichotomizingOn "%1 %p{je} %n{nen�} &%trichotomizing on %2")
(format cz equivalenceRelationOn "%1 %p{je} %n{nen�} &%equivalence relation on %2")
(format cz distributes "%1 %p{je} %n{nen�} &%distributive over %2")
(format cz causes "%1 %n{doesn't} &%cause%p{s} %2")
(format cz copy "%1 %p{je} %n{nen�} an exact &%copy of %2")
(format cz time "%1 %n{doesn't} exist%p{s} &%during %2")
(format cz holdsDuring "%2' %2a{%n{ne}plat�} %1a{&%b�hem} %1'")
(format cz capability "%3 %p{je} %n{nen�} &%capable to do %1 in role %2")
(format cz exploits "%1 %n{doesn't} &%exploit%p{s} %2")
(format cz hasPurpose "%1 has %n &%purpose %2")
(format cz hasPurposeForAgent "%1 has %n &%purpose %2 for %3")
(format cz hasSkill "%2 has %n &%skill to do %1")
;holdsRight
(format cz holdsRight "%2 %p{has} %n{doesn't have} the &%right to perform %1")
;confersRight
;holdsObligation
;confersObligation
(format cz located "%1 %p{je} %n{nen�} &%located at %2")
(format cz partlyLocated "%1 %p{je} %n{nen�} &%��ste�n� um�st�n v %2")
(format cz exactlyLocated "%1 %p{je} %n{nen�} &%p�esn� um�st�n v %2")
(format cz between "%2 %p{je} %n{nen�} &%mezi %1 a %3")
;traverses
;crosses
;penetrates
(format cz possesses "%1 %n{doesn't} &%posess%p{es} %2")
;precondition
;inhibits
;prevents
;refers
;represents
;representsForAgent
;representsInLanguage
;equivalentContentClass
;subsumesContentClass
;equivalentContentInstance
;subsumesContentInstance
;realization
;expressedInLanguage
;subPlan
;uses  

;;;;;;;;;;;;;;;;;;
; Functions

;AbstractionFn
;ExtensionFn
;TruthFn
(format cz ListFn "(%*[,])")
(format cz ListOrderFn "%2th &%element of %1")
(format cz ListLengthFn "&%length of %1")
;ListConcatenateFn
(format cz WhereFn "m�sto &%kde %1 byl v �ase %2'")
(format cz PropertyFn "&%belongings of %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; STRUCTURAL ONTOLOGY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz instance "%1 %p{je} %n{nen�} &%instanc� t��dy %2")
(format cz inverse "%1 %p{je} %n{nen�} &%inverzn� k %2")
(format cz subclass "%1 %p{je} %n{nen�} &%podt��dou  %2")
(format cz subrelation "%1 %p{je} %n{nen�} a &%subrelation of %2")
(format cz domain "%2th argument of %1 %p{je} %n{nen�} an &%instance of %3")
(format cz domainSubclass "%2th argument of %1 %p{je} %n{nen�} a &%subclass of %3")
;(format cz equal "%1 se &%%n{ne}rovn� %2")
(format cz range "&%range of %1 %p{je} %n{nen�} an instance of %2")
(format cz valence "%1 %p{&%has} %n{doesn't &%have} %2 &%argument(s)")
(format cz disjoint "%1 %p{je} %n{nen�} &%disjoint from %2")
(format cz disjointRelation "%1 and %2 are %n &%disjoint")
(format cz contraryProperty "%1 %p{je} %n{nen�} &%opposed to %2")
(format cz exhaustiveDecomposition "%1 %p{je} %n{nen�} &%covered by %*{2-}[,]")
(format cz disjointDecomposition "%1 %p{je} %n{nen�} &%disjointly decomposed into %*{2-}[,]")
(format cz partition "%1 %p{je} %n{nen�} &%exhaustively partitioned into %*{2-}[,]")
(format cz relatedInternalConcept "%1 %p{je} %n{nen�} &%internally related to %2")
;relatedExternalConcept
;synonymousExternalConcept
;subsumingExternalConcept
;subsumedExternalConcept
(format cz name "%1 has %n &%name %2")
(format cz subAttribute "%1 %p{je} %n{nen�} a &%subattribute of %2")
(format cz successorAttribute "%1 %p{je} %n{nen�} an immediate &%successor attribute of %2")
(format cz successorAttributeClosure "%1 %p{je} %n{nen�} a &%successor attribute of %2")
(format cz entails "%1 %n{doesn't} &%entail%p{s} %2")
(format cz holds "%1(%*{2-}[,]) %n{doesn't} &%hold%p{s}")

;;;;;;;;;;;;;;;;;;
; Functions

(format cz DomainFn "&%domain of %1")
(format cz RangeFn "&%range of %1")
(format cz AssignmentFn "%1(%*{2-}[,])")
(format cz PowerSetFn "all &%subclasses of %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MEREOTOPOLOGY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz connected "%1 %p{je} %n{nen�} &%spojen s %2")
(format cz connects "%1 &%%n{ne}spojuje %2 a %3")
(format cz meetsSpatially "%1 se &%%n{ne}dot�k� %2")
(format cz overlapsSpatially "%1 se &%%n{ne}p�ekr�v� s %2")
(format cz overlapsPartially "%1 se ��ste�n� &%%n{ne}p�ekr�v� s %2")
(format cz superficialPart "%1 %p{je} %n{nen�} a &%minim�ln� ��st� %2")
(format cz surface "%1 %p{je} %n{nen�} &%povrchem %2")
(format cz interiorPart "%1 %p{je} %n{nen�} a &%interior part of %2")
(format cz hole "%1 %p{je} %n{nen�} &%d�ra v %2")
(format cz fills "%1 &%%n{ne}zapl�uje  %2")
(format cz completelyFills "%1 zcela &%%n{ne}zapl�uje %2")
(format cz partiallyFills "%1 ��ste�n� &%%n{ne} &%zapl�uje %2")
(format cz properlyFills "%1 p�esn� &%%n{ne}zapl�uje %2")

;;;;;;;;;;;;;;;;;;
; Functions

;MereologicalSumFn
;MereologicalProductFn
;MereologicalDifferenceFn
;PrincipalHostFn
;SkinFn  

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; TEMPORAL CONCEPTS 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz duration "&%duration of %1 %p{je} %n{nen�} %2")
;frequency
(format cz temporalPart "%1 %p{je} %n{nen�} a &%part of %2'")
(format cz starts "%1 %n{doesn't} &%start%p{s} %2")
(format cz finishes "%1 %n{doesn't} &%finish%p{es} %2")
(format cz before "%1 %n{doesn't} happen%p{s} &%before %2'")
(format cz beforeOrEqual "%1 %n{doesn't} &%happen%{s} before or at %2")
(format cz temporallyBetween "%2 %p{je} %n{nen�} &%between %1 and %3")
(format cz temporallyBetweenOrEqual "%2 %p{je} %n{nen�} &%between or at %1 and %3")

(format cz overlapsTemporally "%2 %n{doesn't} &%overlap%p{s} %1")
(format cz during "%1 %n{doesn't} take%p{s} place &%during %2")
(format cz meetsTemporally "%1 %n{doesn't} &%meet%p{s} %2")
(format cz earlier "%1 %n{doesn't} happen%p{s} &%earlier than %2")
(format cz cooccur "%1 %n{doesn't} &%occur%p{s} at the same time as %2")
(format cz date "&%date of %1 %p{je} %n{nen�} %2")

;;;;;;;;;;;;;;;;;;
; Functions

(format cz TemporalCompositionFn "&%decomposition of %1 into %3 %2s")
(format cz BeginFn "the &%beginning of %1'")
(format cz EndFn "the &%end of %1'")
(format cz TimeIntervalFn "&%interval between %1 and %2")
(format cz WhenFn "&%doba existence %1")
(format cz PastFn "&%p�ed %1'")
(format cz ImmediatePastFn "pr�v� &%p�ed %1'")
(format cz FutureFn "&%po %1'")
(format cz ImmediateFutureFn "pr�v� &%po %1'")
(format cz YearFn "%1 of %2")
(format cz MonthFn "%1 of %2")
(format cz DayFn "%1 of %2")
(format cz HourFn "%1 of %2")
(format cz MinuteFn "%1 of %2")
(format cz SecondFn "%1 of %2")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; SET/CLASS THEORY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz subset "%1 %p{je} %n{nen�} a &%subset of %2")
(format cz element "%1 %p{je} %n{nen�} an &%element of %2")

;;;;;;;;;;;;;;;;;;
; Functions

;UnionFn
;IntersectionFn
;RelativeComplementFn
;ComplementFn
;GeneralizedUnionFn
;GeneralizedIntersectionFn
;CardinalityFn
;KappaFn  


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; OBJECTS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

;developmentalForm
(format cz inhabits "%1 %n{doesn't} &%live%p{s} in %2")
(format cz parent "%2 %p{je} %n{nen�} a &%parent of %1")
(format cz mother "%2 %p{je} %n{nen�} a &%mother of %1")
(format cz father "%2 %p{je} %n{nen�} a &%father of %1")
(format cz sibling "%1 %p{je} %n{nen�} a &%sibling of %2")
;authors
;editor
;publishes
(format cz version "%1 %p{je} %n{nen�} a &%version of %2")
;engineeringSubcomponent
;connectedEngineeringComponents
;connectsEngineeringComponents
;familyRelation
(format cz employs "%1 %n{doesn't} &%employ%p{s} %2")
;subOrganizations
;occupiesPosition
;citizen  

;;;;;;;;;;;;;;;;;;
; Functions

;EditionFn
;SeriesVolumeFn
;PeriodicalIssueFn
;OrganizationFn  


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; PROCESSES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz subProcess "%1 %p{je} %n{nen�} a &%subprocess of %2")
(format cz path "%2 %p{je} %n{nen�} &%cesta pod�l kter� se vyskytuje %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; QUALITIES
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz orientation "%1 %p{je} %n{nen�} %3 vzhledem k %2")
;direction
(format cz birthTime "%1 %p{je} %n{nen�} born at %2")
(format cz deathTime "%1 %n{doesn't} die%p{s} at %2")
;modalProperty

;;;;;;;;;;;;;;;;;;
; Functions

;RelativeTimeFn


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; UNITS OF MEASURE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz measure "the &%measure of %1 %p{je} %n{nen�} %2")
;age
(format cz length "&%d�lka %1 %p{je} %n{nen�} %2")
;width
;diameter
;height
;distance
(format cz larger "%1 %p{je} %n{nen�} &%larger than %2")
;smaller
(format cz monetaryValue "&%value of %1 %p{je} %n{nen�} %2")

;;;;;;;;;;;;;;;;;;
; Functions

(format cz MeasureFn "%1 %2(s)")
;KiloFn
;MegaFn
;GigaFn
;TeraFn
;MilliFn
;MicroFn
;NanoFn
;PicoFn
;IntervalFn
;RecurrentTimeIntervalFn
;MagnitudeFn
;DensityFn
;SpeedFn
;VelocityFn
(format cz WealthFn "&%value of belongings of %1")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; NUMERIC FUNCTIONS
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz identityElement "%2 %p{je} %n{nen�} an &%identity element of %1")

;;;;;;;;;;;;;;;;;;
; Functions

(format cz MultiplicationFn "%*[*]")
(format cz AdditionFn "(%*[+])")
(format cz SubtractionFn "(%*[-])")
(format cz DivisionFn "%*[/]")
;AbsoluteValueFn
;ArcCosineFn
;ArcSineFn
;ArcTangentFn
;CeilingFn
;CosineFn
;DenominatorFn
;ExponentiationFn
;FloorFn
;GreatestCommonDivisorFn
;ImaginaryPartFn
;IntegerSquareRootFn
;LeastCommonMultipleFn
;LogFn
;MaxFn
;MinFn
;NumeratorFn
;RationalNumberFn
;RealNumberFn
;ReciprocalFn
(format cz RemainderFn "%1 &%mod %2")
;RoundFn
;SignumFn
;SineFn
;SquareRootFn
;TangentFn
;IdentityFn
(format cz SuccessorFn "(%1+1)")
(format cz PredecessorFn "(%1+2)")


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; GRAPH THEORY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;
; Relations

(format cz links "%3 &%%n{ne}&%spojuje %1 a %2")
(format cz graphPart "%1 %p{je} %n{nen�} &%��st� %2")
(format cz subGraph "%1 %p{je} %n{nen�} &%podgrafem %2") 
(format cz pathLength "&%d�lka %1 %p{je} %n{nen�} %2")
;arcWeight  

;;;;;;;;;;;;;;;;;;
; Functions

;InitialNodeFn
;TerminalNodeFn
(format cz BeginNodeFn "the &%beginning of %1")
(format cz EndNodeFn "the &%end of %1")
;PathWeightFn
;MinimalWeightedPathFn
;MaximalWeightedPathFn
;GraphPathFn
;CutSetFn
;MinimalCutSetFn  
