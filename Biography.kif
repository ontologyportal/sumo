;; ============================================================================
;;                   Biography Ontology
;; ============================================================================
;; Created by: Valeria de Paiva (vdepaiva [at] reardencommerce [dot] com)
;; REARDEN COMMERCE, INC.
;; Created on: August 10, 2011
;; ============================
;; Revised version: March 2015 
;; By: Michal Svarny (michal [dot] svarny [at] gmail [dot] com)
;; *** Note: The revision of Biography.kif is now in progress and the revised parts of the original Biography.kif are being 
;; moved to this version. ***
;;  
;; Further revised January 2023
;; by Jennie Pease
;; compared the original Biography.kif with this current Biography.kif, recovered content deleted and revised axioms if needed
;;
;; Description:  This describes concepts related to biographies in Wikipedia, 
;; starting with the attributes described in Infoboxes.
;; They are organized in templates described in http://en.wikipedia.org/wiki/Category:Infobox_templates

;; Ontology dependencies for Biography.kif: 
;; Merge.kif
;; Mid-level-ontology.kif,  
;; Media.kif
;; Music.kif 

;; Access to and use of these products is governed by the GNU General Public 
;; License <http://www.gnu.org/copyleft/gpl.html>. 
;; By using these products, you agree to be bound by the terms  of the GPL.
;; We ask the people using or referencing this work cite our primary paper:
;; Niles, I., and Pease, A.  2001.  Towards a Standard Upper Ontology.  In 
;; Proceedings of the 2nd International Conference on Formal Ontology in 
;; Information Systems (FOIS-2001), Chris Welty and Barry Smith, eds, 
;; Ogunquit, Maine, October 17-19, 2001.  See also http://www.ontologyportal.org

;; ================================
;; Outline
;; --------------------------------
;; CEREMONIES and life events
;; OCCUPATIONS
;;   Professions
;;   Skilled Occupations
;;      The Criative Economy Occupations
;; ================================
;;---------------------------------------------------------------------
;; CEREMONIES  and Life Events
;;---------------------------------------------------------------------

;; Wedding is defined in MILO 31Jan2023 JP
;; reinstated ReligiousWedding
(documentation ReligiousWedding EnglishLanguage "&%ReligiousWedding is a &%Wedding held with the presence of a &ReligiousService as 
part of the &%Ceremony.")      
(subclass ReligiousWedding Wedding)
(subclass ReligiousWedding ReligiousProcess)

(=>
  (instance ?WED ReligiousWedding)
  (exists (?PROC)
    (and
      (instance ?PROC ReligiousService)
      (subProcess ?PROC ?WED))))
      
;; Coronation is defined in Government.kif JP
;; restored BarMitzvah JP 31Jan2023
(subclass BarMitzvah Ceremony)
(subclass BarMitzvah ReligiousProcess)
(documentation BarMitzvah EnglishLanguage "An initiation ceremony marking the 13th birthday of a Jewish boy.")

(=>
  (and
    (instance ?MIT BarMitzvah)
    (patient ?MIT ?X)
    (instance ?X Boy)
    (member ?X ?GROUP)
    (instance ?GROUP Judaism)
    (birthdate ?X ?DAY)
    (instance ?DAY (DayFn ?D (MonthFn ?M (YearFn ?Y)))))
  (exists (?Y13 ?BD13)
    (and
      (instance ?Y13 Integer)
      (equal ?Y13 (AdditionFn ?Y 13))
      (instance ?BD13 (DayFn ?D (MonthFn ?M (YearFn ?Y13))))
      (equal
        (WhenFn ?MIT)
        (ImmediateFutureFn ?BD13)))))

(=>
  (instance ?MIT BarMitzvah)
  (exists (?PROC)
    (and
      (instance ?PROC ReligiousService)
      (subProcess ?PROC ?MIT)))) 

;; added BatMitzvah JP 31Jan2023
(subclass BatMitzvah Ceremony)
(subclass BatMitzvah ReligiousProcess)
(documentation  BatMitzvah EnglishLanguage "An initiation ceremony marking the 13th birthday of a Jewish girl.")

(=>
  (and
    (instance ?MIT BatMitzvah)
    (patient ?MIT ?X)
    (instance ?X Girl)
    (member ?X ?GROUP)
    (instance ?GROUP Judaism)
    (birthdate ?X ?DAY)
    (instance ?DAY (DayFn ?D (MonthFn ?M (YearFn ?Y)))))
  (exists (?Y13 ?BD13)
    (and
      (instance ?Y13 Integer)
      (equal ?Y13 (AdditionFn ?Y 13))
      (instance ?BD13 (DayFn ?D (MonthFn ?M (YearFn ?Y13))))
      (equal
        (WhenFn ?MIT)
        (ImmediateFutureFn ?BD13)))))

(=>
  (instance ?MIT BatMitzvah)
  (exists (?PROC)
    (and
      (instance ?PROC ReligiousService)
      (subProcess ?PROC ?MIT))))
;;
;; 1Feb2023 JP
;; restored Ordination as Ordaining

(subclass Ordaining ReligiousProcess)
(documentation  Ordaining EnglishLanguage "the act of &%Ordaining is the &%Process by which individuals are
set apart and elevated from laity class and be authorized to perform &%ReligiousServices, eg. in &%Christianity, &%Cleric. Not
all &%BeliefGroup holds Ordaination as a &%Ceremony but most do.")

(=>
  (instance ?ORD Ordaining)
  (hasPurpose ?ORD
    (exists (?X ?ORG ?POS)
      (and
        (patient ?ORD ?X)
        (instance ?X Human)
        (instance ?ORG ReligiousOrganization)
        (member ?X ?ORG)
        (result ?ORD ?POS)
        (instance ?POS ReligiousPosition)
        (occupiesPosition ?X ?POS ?ORG)))))
;;
;; 2Feb2023 JP
;; added appointedPosition

(instance appointedPosition TernaryPredicate)
(domain appointedPosition 1 Appointing)
(domain appointedPosition 2 AutonomousAgent)
(domain appointedPosition 3 Position)
(documentation appointedPosition EnglishLanguage "(appointedPosition ?PROC ?AGENT ?POS) means that
an ?AGENT (can be a &%Human or an &%Organization) is appointed, through the &%Process of &%Appointing
to the &%Position of ?POS. For example, a person is appointed to a &%Cleric position in &%Christianity.")

(=>
  (and
    (instance ?ORD Ordaining)
    (patient ?ORD ?X)
    (instance ?X Human)
    (member ?X Christianity))
  (hasPurpose ?ORD
    (exists (?CER ?A)
      (and
        (instance ?CER Ceremony)
        (instance ?A Appointing)
        (subProcess ?A ?CER)
        (patient ?A ?X)
        (appointedPosition ?A ?X Cleric)))))
            
;;Baptism
(documentation baptizeddate EnglishLanguage "(baptizeddate ?PERSON1 ?DAY) means that ?DAY is the day on which 
?PERSON1 was baptized.")      
(domain baptizeddate 1 Human)   
(domain baptizeddate 2 Day)    
(instance baptizeddate BinaryPredicate)

(=>
    (baptizeddate ?PERSON ?DAY)
    (exists (?BAPTISM)
        (and
            (instance ?BAPTISM Baptizing)
            (experiencer ?BAPTISM ?PERSON)
            (date ?BAPTISM ?DAY))))

(documentation baptizedplace EnglishLanguage "(baptizedplace ?PERSON ?PLACE) means that ?PLACE is the place 
where the ?PERSON was baptized.")
(domain baptizedplace 1 Human)
(domain baptizedplace 2 Region)
(instance baptizedplace BinaryPredicate)

(=>
    (baptizedplace ?PERSON ?PLACE)
    (exists (?BAPTISM)
        (and
            (instance ?BAPTISM Baptizing)
            (experiencer ?BAPTISM ?PERSON)
            (eventLocated ?BAPTISM ?PLACE))))

;; Burial

(documentation burialplace EnglishLanguage "(burialplace ?INDIV ?PLACE) means that ?PLACE is the place where 
?INDIV was buried.")
(domain burialplace 1 Animal)
(domain burialplace 2 Object)
(instance burialplace BinaryPredicate)

(=>
    (burialplace ?INDIV ?PLACE)
    (exists (?BURIAL)
        (and
            (instance ?BURIAL Burial)
            (patient ?BURIAL ?INDIV)
            (eventLocated ?BURIAL ?PLACE))))

;;
;; 2Feb2023 JP
;; restored Founder

(instance Founder SocialRole)
(documentation Founder EnglishLanguage "A person who founds or establishes an institution.")

(=>
  (and
    (attribute ?A Founder)
    (instance ?A Human))
  (exists (?PROC)
    (and
      (instance ?PROC Founding)
      (agent ?PROC ?A))))

;;
;; 2Feb2023 JP
;; Restore the following certificates

(subclass BirthCertificate Certificate)
(documentation BirthCertificate EnglishLanguage "A &%BirthCertificate is a &%Text which documents the &%Birth of a 
person.")

(=>
  (instance ?TEXT BirthCertificate)
  (hasPurpose ?TEXT
    (exists (?B ?A)
      (and
        (instance ?B Birth)
        (instance ?A Human)
        (experiencer ?B ?A)
        (represents ?TEXT ?B)))))
       
(=>
  (and
    (instance ?TEXT BirthCertificate)
    (instance ?B Birth)
    (instance ?A Human)
    (experiencer ?B ?A))
  (containsFormula ?TEXT
    (exists (?DAY ?P ?N)
      (and
        (birthdate ?A ?DAY)
        (instance ?DAY Day)
        (birthplace ?A ?P)
        (instance ?P GeographicArea)
        (represents ?N ?A)
        (instance ?N Name)))))
        
(subclass DeathCertificate Certificate)
(documentation DeathCertificate EnglishLanguage "A &%DeathCertificate is a &%Text which documents the &%Death of a 
person.")

(=>
  (instance ?TEXT DeathCertificate)
  (hasPurpose ?TEXT
    (exists (?D ?A)
      (and
        (instance ?D Death)
        (instance ?A Human)
        (experiencer ?D ?A)
        (represents ?TEXT ?D)))))

(=>
  (and
    (instance ?TEXT DeathCertificate)  
    (instance ?D Death)
    (instance ?A Human)
    (experiencer ?D ?A))
  (containsFormula ?TEXT
    (exists (?DAY ?P ?N ?PROC)
      (and
        (deathdate ?A ?DAY)
        (instance ?DAY Day)
        (deathplace ?A ?P)
        (instance ?P GeographicArea)
        (represents ?N ?A)
        (instance ?N Name)
        (causes ?PROC ?D)
        (instance ?PROC Process))))) 

(subclass MarriageCertificate Certificate)
(documentation MarriageCertificate EnglishLanguage "A &%MarriageCertificate is a legal document which certifies a 
marriage has takenplace, containing information of the time and and place about the ceremony, signed by the parties,
witnesses and the officiant.")

(=>
  (instance ?TEXT MarriageCertificate)
  (attribute ?TEXT Legal))
  
(=>
  (and
    (instance ?TEXT MarriageCertificate)
    (instance ?A Human)
    (instance ?B Human)
    (spouse ?A ?B))
  (containsFormula ?TEXT
    (exists (?DAY)
      (and
        (weddingdate ?A ?B ?DAY)
        (instance ?DAY Day)))))

(=>
  (instance ?TEXT MarriageCertificate)
  (exists (?S ?W ?A ?B)
    (and
      (instance ?S SigningAnAgreement)  
      (patient ?S ?TEXT)
      (instance ?W Wedding)
      (represents ?TEXT ?W)
      (subProcess ?S ?W)
      (patient ?W ?A)
      (instance ?A Human)
      (patient ?W ?B)
      (instance ?B Human)
      (not
        (equal ?A ?B))
      (agent ?S ?A)
      (agent ?S ?B))))                 
;;;--------------------------------------------------------------------
;;; OCCUPATIONS
;;;-------------------------------------------------------------------- 
;;; using the lists from Wikipedia  
;;; http://en.wikipedia.org/wiki/Lists_of_people_by_occupation 
;;; http://en.wikipedia.org/wiki/Profession#List_of_professions

;;------------------------------------------------------------
;; Professions

(instance Scientist Profession)
(documentation Scientist EnglishLanguage "A person with advanced knowledge of one or more &%Sciences.")
(=>
  (attribute ?PERSON Scientist)
  (hasExpertise ?PERSON Science)) 

(instance Actuary Profession)
(subAttribute Actuary Scientist) 
(documentation Actuary EnglishLanguage "An actuary is a business professional who deals with &%ActuaryScience,
the financial impact of risk and uncertainty.")

(=>
  (attribute ?PERSON Actuary)
  (hasExpertise ?PERSON ActuaryScience))

(instance Anthropologist Profession)
(subAttribute Anthropologist Scientist)
(documentation Anthropologist EnglishLanguage "A social scientist who specializes in &%Anthropology.")

(=>
  (attribute ?PERSON Anthropologist)
  (hasExpertise ?PERSON Anthropology))

(instance Archeologist Profession)
(subAttribute Archeologist Scientist)
(documentation Archeologist EnglishLanguage "Archeologists is someone who &%hasExpertise in &%Archeology")

(=>
  (attribute ?PERSON Archeologist)
  (hasExpertise ?PERSON Archeology))  

(instance Architect Profession)
(documentation Architect EnglishLanguage "An architect is a person trained in &%Architecture, the planning, design and oversight of the construction of &%Buildings.")

(=>
  (attribute ?PERSON Architect)
  (hasExpertise ?PERSON Architecture))

(instance Astronomer Profession)
(subAttribute Astronomer Scientist)
(documentation Astronomer EnglishLanguage "A &%Physicist who studies &%Astronomy.")

(=>
  (attribute ?PERSON Astronomer)
  (hasExpertise ?PERSON Astronomy))

(instance Biologist Profession)
(subAttribute Biologist Scientist)
(documentation Biologist EnglishLanguage "A &%Scientist who studies &%Biology that is living organisms.")

(=>
  (attribute ?PERSON Biologist)
  (hasExpertise ?PERSON Biology))

(instance Chemist Profession)
(subAttribute Chemist Scientist)
(documentation Chemist EnglishLanguage "A &%Scientist who specializes in &%Chemistry.")

(=>
  (attribute ?PERSON Chemist)
  (hasExpertise ?PERSON Chemistry))

(instance ComputerScientist Profession)
(subAttribute ComputerScientist Scientist)
(documentation ComputerScientist EnglishLanguage "A &%Scientist who specializes in &%ComputerScience.")

(=>
  (attribute ?PERSON ComputerScientist)
  (hasExpertise ?PERSON ComputerScience)) 

(instance Economist Profession)
(subAttribute Economist Scientist)
(documentation Economist EnglishLanguage "An expert in the science of &%Economics.")

(=>
(attribute ?PERSON Economist)
(hasExpertise ?PERSON Economics)) 

(instance Engineer Profession)
(documentation Engineer EnglishLanguage "A person who uses scientific knowledge to solve practical problems. A graduate from an &%Engineering school.")

(=>
  (attribute ?PERSON Engineer)
  (hasExpertise ?PERSON Engineering)) 
  
(subAttribute AeronauticalEngineer Engineer)

(instance AeronauticalEngineer SkilledOccupation)
(documentation AeronauticalEngineer EnglishLanguage "an &%Engineer concerned with &%Designing and &%Making of &%Aircrafts")

(=>
  (attribute ?X AeronauticalEngineer)
  (exists (?SKILL)
    (and
      (hasSkill ?SKILL ?X)
      (forall (?P)
        (=> 
          (instance ?P ?SKILL)
          (or
            (exists (?CONS ?OBJ ?PT)
              (and
                (instance ?CONS Making)
                (or
                  (instance ?OBJ Aircraft)
                  (and
                    (instance ?OBJ ?PT)
                    (typicalPart ?PT Aircraft)))
                (result ?CONS ?OBJ)
                (subProcess ?P ?CONS)))
            (exists (?DESIGN ?PLAN ?OBJ ?PT)
              (and
                (instance ?DESIGN Designing)
                (or
                  (instance ?OBJ Aircraft)
                  (and
                    (instance ?OBJ ?PT)
                    (typicalPart ?PT Aircraft)))
                (result ?DESIGN ?PLAN)
                (represents ?PLAN ?OBJ)
                (subProcess ?P ?DESIGN)))))))))

(instance Geographer Profession)
(subAttribute Geographer Scientist)
(documentation Geographer EnglishLanguage "An expert on &%Geography.")

(=>
  (attribute ?PERSON Geographer)
  (hasExpertise ?PERSON Geography)) 

(instance Geologist Profession)
(subAttribute Geologist Scientist)
(documentation Geologist EnglishLanguage " A specialist in &%Geology.")

(=>
  (attribute ?PERSON Geologist)
  (hasExpertise ?PERSON Geology)) 

(instance Historian Profession)
(documentation Historian EnglishLanguage "A person who is an authority on &%History and who studies it and writes about it.")

(=>
  (attribute ?PERSON Historian)
  (hasExpertise ?PERSON History)) 

(instance Linguist Profession)
(subAttribute Linguist Scientist)
(documentation Linguist EnglishLanguage "A specialist in &%Linguistics.")

(=>
  (attribute ?PERSON Linguist)
  (hasExpertise ?PERSON Linguistics))  
  
(instance Mathematician Profession)
(documentation Mathematician EnglishLanguage "A person skilled in &%Mathematics.")

(=>
  (attribute ?PERSON Mathematician)
  (hasExpertise ?PERSON Mathematics))
  
(instance MedicalResearcher Profession)
(subAttribute MedicalResearcher Scientist)
(documentation MedicalResearcher EnglishLanguage "A &%Scientist who devotes himself to doing medical research.")

(=>
  (attribute ?PERSON MedicalResearcher)
  (and
    (attribute ?PERSON Researcher)
    (hasExpertise ?PERSON MedicalScience)))  
    
(instance Paleontologist Profession)
(subAttribute Paleontologist Scientist)
(documentation Paleontologist EnglishLanguage "A specialist in paleontology, the earth science that studies fossil organisms and related remains.") 

(=>
  (attribute ?PERSON Paleontologist)
  (hasExpertise ?PERSON Paleontology))
  
(instance Philosopher Profession)
(documentation Philosopher EnglishLanguage "A specialist in &%Philosophy.")

(=>
  (attribute ?PERSON Philosopher)
  (hasExpertise ?PERSON Philosophy))
  
(instance Psychologist Profession)
(subAttribute Psychologist Scientist)
(documentation Psychologist EnglishLanguage "A scientist trained in &%Psychology.")
(termFormat EnglishLanguage Psychologist "psychologist")

(=>
  (attribute ?PERSON Psychologist)
  (hasExpertise ?PERSON Psychology))  

(subAttribute Psychiatrist MedicalDoctor)
(documentation Psychiatrist EnglishLanguage "A &%MedicalDoctor who may prescribe &%Medicine for psychiatric
conditions.")
(termFormat EnglishLanguage Psychiatrist "psychiatrist")

(instance Physicist Profession)
(subAttribute Physicist Scientist)
(documentation Physicist EnglishLanguage " A scientist trained in &%Physics.")

(=>
  (attribute ?PERSON Physicist)
  (hasExpertise ?PERSON Physics))  
  
(instance PoliticalScientist Profession)
(subAttribute PoliticalScientist Scientist)
(documentation PoliticalScientist EnglishLanguage "A social scientist specializing &%PoliticalScience,  the study of government.")

(=>
  (attribute ?PERSON PoliticalScientist)
  (hasExpertise ?PERSON PoliticalScience)) 
  
(instance Librarian Profession)
(subAttribute Librarian Scientist)
(documentation Librarian EnglishLanguage "A professional person trained in library science and engaged in &%Library services.")

(=>
  (attribute ?PERSON Librarian)
  (hasExpertise ?PERSON LibraryScience))
  
(instance RegisteredNurse Profession)
(documentation RegisteredNurse EnglishLanguage "A graduate nurse who has passed examinations for registration.")

(=>
  (attribute ?PERSON RegisteredNurse)
  (hasExpertise ?PERSON TherapeuticProcess)) 
  
(instance Sociologist Profession)
(subAttribute Sociologist Scientist)
(documentation Sociologist EnglishLanguage "A social scientist who studies the institutions and development of human society as part of &%Sociology.")

(=>
  (attribute ?PERSON Sociologist)
  (hasExpertise ?PERSON Sociology)) 

(instance Statistician Profession)
(documentation Statistician EnglishLanguage "A &%Mathematician who specializes in &%Statistics.")

(=>
  (attribute ?PERSON Statistician)
  (hasExpertise ?PERSON Statistics))

(instance Theologian Profession)
(documentation Theologian EnglishLanguage "Someone who is learned in &%Theology or who speculates about theology.")

(=>
  (attribute ?PERSON Theologian)
  (hasExpertise ?PERSON Theology))

(instance Veterinarian Profession)
(subAttribute Veterinarian Scientist)
(documentation Veterinarian EnglishLanguage "A doctor who practices veterinary medicine.")

(=>
  (attribute ?PERSON Veterinarian)
  (hasExpertise ?PERSON VeterinaryScience))

(instance Zoologist Profession)
(subAttribute Zoologist Scientist)
(documentation Zoologist EnglishLanguage "A specialist in the branch of &%Biology dealing with animals.")

(=>
  (attribute ?PERSON Zoologist)
  (hasExpertise ?PERSON Zoology))
  
(instance Botanist Profession)
(subAttribute Botanist Scientist)
(documentation Botanist EnglishLanguage "A biologist specializing in the study of plants.")

(=>
  (attribute ?PERSON Botanist)
  (hasExpertise ?PERSON Botany)) 
;-------------------------------------------------------------
;; Management Professions
;;------------------------------------------------------------
; Managerial Professions include Financial Analysts, Quantity Surveyors, Estate Agents, etc...

  
;;;--------------------------------------------------------------------
;;; Skilled Occupations
;;;-------------------------------------------------------------------- 
;;; SkilledOccupation is defined in Mid-level-ontology.kif, here are more specific occupations that are instances or subclasses of SkilledOccupation.

(instance Pilot SkilledOccupation)
(documentation Pilot EnglishLanguage "Any &%SkilledOccupation that involves &%Driving an &%Aircraft")

(=>
  (and
    (instance ?PILOT Human)
    (attribute ?PILOT Pilot))
  (hasSkill FlyingAircraft ?PILOT))
  
(instance Astronaut SkilledOccupation)
(documentation Astronaut EnglishLanguage "A person trained to travel in a spacecraft.")

(=>
  (attribute ?ASTRONAUT Astronaut)
  (hasSkill SpaceTransportation ?ASTRONAUT))

(instance Photographer SkilledOccupation)
(documentation Photographer EnglishLanguage "A photographer is a person who takes photographs, for profit or for fun.")

(=>
  (attribute ?PERSON Photographer)
  (hasSkill Photographing ?PERSON)) 
  
(instance Tailor SkilledOccupation)
(documentation Tailor EnglishLanguage "A tailor is a person who makes, repairs, or alters clothing professionally, especially suits and men's clothing.")

(=>
  (attribute ?PERSON Tailor)
  (hasSkill Sewing ?PERSON)) 
;;---------------------------------------------------------------------------------- 
;; The Criative Economy Occupations  from http://en.wikipedia.org/wiki/Creative_industries
;;----------------------------------------------------------------------------------
  
;;;;;ArtisticOccupation
;;msvarny: ArtisticOccupation is conflicting a bit with EntertainmentProfession defined in Mid-level-ontology.kif, but the name of this term itself seemed to me more appropriate so I will merge both terms using the name ArtisticOccupation.

(subclass ArtisticOccupation SkilledOccupation)
(documentation ArtisticOccupation EnglishLanguage "People in design, education, arts, music and entertainment, whose economic function is to create new ideas, new technology and/ or creative content. [Will be merged with EntertainmentProfession in in Mid-level-ontology.kif using the name ArtisticOccupation, msvarny]")

(instance Dancer ArtisticOccupation)
(documentation Dancer EnglishLanguage "A dancer is one who performs dance, either professionally or for personal enjoyment.")

(=>
  (attribute ?PERSON Dancer)
  (hasSkill Dancing ?PERSON))

(instance Designer ArtisticOccupation)
(documentation Designer EnglishLanguage "Someone who creates plans to be used in making something, such as gardens, buildings, clothes, artwork, etc.")

(=>
  (attribute ?PERSON Designer)
  (hasSkill Designing ?PERSON))

(instance Draftsman ArtisticOccupation)
(documentation Draftsman EnglishLanguage "An artist skilled at drawing, an skilled worker who draws plans of buildings or machines.")

(=>
  (attribute ?PERSON Draftsman)
  (hasSkill Drawing ?PERSON))

(instance Painter ArtisticOccupation)
(documentation Painter EnglishLanguage "An artist who paints.")

(=>
  (attribute ?PERSON Painter)
  (hasSkill ArtPainting ?PERSON))

(instance Sculptor ArtisticOccupation)
(documentation Sculptor EnglishLanguage "An artist who creates &%Sculptures.")

(=>
  (attribute ?PERSON Sculptor)
  (hasSkill Sculpting ?PERSON))

(instance Writer ArtisticOccupation)
(documentation Writer EnglishLanguage "Someone who writes (books or stories or articles or the like) professionally (for pay).(WordNet definition). Which means it is an &%ArtisticOccupation, which implies that the person who has this &%Attribute has the skill to &%WrittenCommunication and &%Writing. Also it implies that there exists a &%Text created by the &%Writer.")
;possible subs   Novelist, playwright, poet, essayist, critic

(=>
  (attribute ?PERSON Writer)
  (hasSkill WrittenCommunication ?PERSON))

(=>
  (attribute ?PERSON Writer)
  (hasSkill Writing ?PERSON))

(=>
  (attribute ?X Writer)
  (exists (?OBJ ?PROC)
    (and
      (instance ?PROC Writing)
      (or
        (instance ?OBJ Text)
        (instance ?OBJ Document))
      (agent ?PROC ?X)
      (result ?PROC ?OBJ))))
;;
;; Jennie 13th August 2022
;; Revised the second arguement of authors to a class     
(=>
  (and
    (attribute ?X Writer)
    (instance ?TEXT ?CLASS)
    (or
      (subclass ?CLASS Text)
      (subclass ?CLASS Document))
    (instance ?WRITE Writing)
    (agent ?WRITE ?X)
    (result ?WRITE ?TEXT))
  (authors ?X ?CLASS))
    
(=>
  (and
    (instance ?PERSON Human)
    (instance ?WRITE Writing)
    (or
      (instance ?TEXT Text)
      (instance ?TEXT Document))
    (result ?WRITE ?TEXT)
    (agent ?WRITE ?PERSON))
  (attribute ?PERSON Writer))

(subAttribute VoiceActor Actor)
(instance VoiceActor ArtisticOccupation)
(documentation VoiceActor EnglishLanguage "Like an &%Actor, a &%VoiceActor is also an agent of the dramatic performance.  However, only his voice can be heard and not the actor himself")

(=>
  (and
    (attribute ?ACTOR VoiceActor)
    (instance ?DRAMA DramaticActing)
    (agent ?DRAMA ?ACTOR)
    (instance ?SPEAK LinguisticCommunication)
    (agent ?SPEAK ?ACTOR)
    (subProcess ?SPEAK ?DRAMA))
  (and
    (not
      (exists (?S ?VIEWER)
        (and
          (instance ?S Seeing)
          (patient ?S ?ACTOR)
          (agent ?S ?VIEWER))))
    (exists (?H ?VIEWER)
      (and
        (instance ?H Hearing)
        (patient ?H ?ACTOR)
        (agent ?H ?VIEWER)))))
