name: TQSP CI

on: workflow_dispatch

env:
  DEFAULT_DOCKER_ACCOUNT: apease

jobs:
  derive_docker:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      image_account: ${{ steps.step1.outputs.image_account }}
    steps:
      - id: step1
        env:
          DOCKER_ACCOUNT: ${{ vars.DOCKER_ACCOUNT }}
        run: echo "image_account=${DOCKER_ACCOUNT:-$DEFAULT_DOCKER_ACCOUNT}" >> "$GITHUB_OUTPUT"

  build_sumo_tptp:
    strategy:
      matrix:
        logic: [ tptp, tff ]
        sumo_size: [ top ] # mid, full
        include:
          - logic: tptp
            class: com.articulate.sigma.trans.SUMOKBtoTPTPKB
          - logic: tff
            class: com.articulate.sigma.trans.SUMOKBtoTFAKB
    runs-on: ubuntu-latest
    needs: derive_docker
    container:
      image: ${{ needs.derive_docker.outputs.image_account }}/sumo-ci:latest
    env:
      SIGMA_HOME: ${{ github.workspace }}/sigmakee-runtime

    steps:
      - uses: actions/checkout@v3
        with:
          path: sumo

      - name: Setup SigmaKEE
        env:
          ONTOLOGYPORTAL_GIT: ${{ github.workspace }}
          SUMO_SIZE: ${{ matrix.sumo_size }}
        run: |
          echo "SIGMA_HOME: $SIGMA_HOME"
          mkdir -p $SIGMA_HOME/KBs/WordNetMappings
          wget https://raw.githubusercontent.com/ontologyportal/sigmakee/master/config.xml
          sed -f ./sumo/tests/TQSP/$SUMO_SIZE.sed ./config.xml > $SIGMA_HOME/KBs/config.xml
          sed -i '/<!--/,/-->/d' $SIGMA_HOME/KBs/config.xml
          cat $SIGMA_HOME/KBs/config.xml
          cp -R $ONTOLOGYPORTAL_GIT/sumo/* $SIGMA_HOME/KBs
          cp /opt/WordNet-3.0/dict/* $SIGMA_HOME/KBs/WordNetMappings/
          sed -i "s|/home/theuser/.sigmakee|$SIGMA_HOME|g" $SIGMA_HOME/KBs/config.xml
          sed -i "s|/home/theuser/workspace/sumo|$ONTOLOGYPORTAL_GIT/sumo|g" $SIGMA_HOME/KBs/config.xml
          sed -i "s|/home/theuser/E/bin/e_ltb_runner|/usr/local/bin/e_ltb_runner|g" $SIGMA_HOME/KBs/config.xml
          sed -i "s|/home/theuser/workspace/vampire/vampire|/usr/local/bin/vampire|g" $SIGMA_HOME/KBs/config.xml

      - name: Produce SUMO-${{ matrix.sumo_size }}.${{ matrix.logic }}
        run: java -Xmx8g -classpath "/root/sigmakee/*" ${{ matrix.class }}

      - name: Upload SUMO-${{ matrix.sumo_size }}.${{ matrix.logic }}
        uses: actions/upload-artifact@v3
        with:
          name: SUMO-${{ matrix.sumo_size }}.${{ matrix.logic }}
          path: ${{ env.SIGMA_HOME }}

  run_vampire:
    strategy:
      fail-fast: false
      matrix:
        logic: [ tptp, tff ]
        test_file: [  SP01S, 
                      SP02S,
                      SP03S,
                      SP04S,
                      SP26S,
                      SP37S,
                      TQG01S,
                      TQG02S,
                      TQG03S,
                      TQG05S,
                      TQG06S,
                      TQG07S,
                      TQG08S,
                      TQG09S,
                      TQG10S,
                      TQG11S,
                      TQG12S,
                      TQG13S,
                      TQG14S,
                      TQG15S,
                      TQG16S,
                      TQG17S,
                      TQG18S,
                      TQG19S,
                      TQG20S,
                      TQG21S,
                      TQG22S,
                      TQG23S,
                      TQG24S,
                      TQG26S,
                      TQG29S,
                      TQG30S,
                      TQG31S,
                      TQG32S,
                      TQG33S,
                      TQG34S,
                      TQG35S,
                      TQG37S,
                      TQG38S,
                      TQG47S,
                      TQG48S,
                      TQG49S,
                      TQG50S ]
        exclude:
        - test_file: TQG47S
          logic: tff
        - test_file: TQG48S
          logic: tff
        - test_file: TQG49S
          logic: tff
        - test_file: TQG11S
          logic: tptp
        - test_file: TQG19S
          logic: tptp
        - test_file: TQG20S
          logic: tptp
        - test_file: TQG21S
          logic: tptp
        - test_file: TQG33S
          logic: tptp
    runs-on: ubuntu-latest
    needs: [ derive_docker,build_sumo_tptp ]
    container:
      image: ${{ needs.derive_docker.outputs.image_account }}/sumo-ci:latest
    env:
      SIGMA_HOME: ${{ github.workspace }}/sigmakee-runtime

    steps:
      - name: Setup SigmaKEE
        run: |
          echo "SIGMA_HOME: $SIGMA_HOME"
          mkdir -p $SIGMA_HOME

      - uses: actions/download-artifact@v4.1.7
        with:
          name: SUMO-top.${{ matrix.logic }}
          path: ${{ env.SIGMA_HOME }}

      - name: Run vampire against SUMO-top.${{ matrix.logic }}
        env:
          VAMPIRE_TIMEOUT: 900
          TEMPLATE_FILE: ${{ matrix.test_file }}.${{ matrix.logic }}
          TEST_FILE: ${{ matrix.test_file }}-top.${{ matrix.logic }}
          PROOF_TYPE: ${{ matrix.logic }}
        run: |
          pwd
          ls -l .
          sed "1i include('$SIGMA_HOME/KBs/SUMO.$PROOF_TYPE')." $SIGMA_HOME/KBs/tests/TQSP/TPTP/$TEMPLATE_FILE > $TEST_FILE
          cat $TEST_FILE
          /usr/local/bin/vampire --cores 0 --mode portfolio --schedule snake_tptp_uns --proof tptp --input_syntax tptp --output_axiom_names on -t $VAMPIRE_TIMEOUT $TEST_FILE > vamp-out.txt || echo "Ignoring vampire exit code"
          mkdir -p $SIGMA_HOME/webapps/sigma/graph
          CATALINA_HOME=$SIGMA_HOME java -Xmx8g -classpath "/root/sigmakee/*" com.articulate.sigma.trans.TPTP3ProofProcessor -f vamp-out.txt
          cp $SIGMA_HOME/webapps/sigma/graph/proof.* .

      - name: Upload vamp-out.txt
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.test_file }}.${{ matrix.logic }}.logs
          path: |
            ./vamp-out.txt
            ./proof.*

      - name: Check results
        if: success() || failure()
        run: |
          #allow errors
          set +e
          grep "Refutation found" vamp-out.txt
          if [ $? -eq 0 ]
          then
            #If refutation found but it's a negated_conjecture then it's OK
            grep negated_conjecture vamp-out.txt
            exit $?
          else
            exit 0
          fi
