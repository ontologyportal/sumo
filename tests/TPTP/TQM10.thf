thf(worlds_tp,type,
    w: $tType ).

thf(modals_tp,type,
    m: $tType ).

thf(desires_tp,type,
    desires: m ).
    
thf(holdsDuring_tp,type,
    holdsDuring: m ).
   
thf(confersObligation_tp,type,
    confersObligation: m ).
   
thf(employs_tp,type,
    employs: $i > $i > w > $o ).
                
thf(agent_tp,type,
    agent: $i > $i > w > $o ).

thf(patient_tp,type,
    patient: $i > $i > w > $o ).

thf(destination_tp,type,
    destination: $i > $i > w > $o ).

thf(plaintiff_tp,type,
    plaintiff: $i > $i > w > $o ).
    
thf(defendant_tp,type,
    defendant: $i > $i > w > $o ).
        
thf(victim_tp,type,
    victim: $i > $i > w > $o ).

thf(suffers_tp,type,
    suffers: $i > $i > w > $o ).
    
thf(earlier_tp,type,    % Doesn't need a world.  Assume basic physics in all worlds. Time can't go backwards.
    earlier: $i > $i > $o ).
        
thf(during_tp,type,     % Doesn't need a world.  Assume basic physics in all worlds.
    during: $i > $i > $o ).
            
thf(whenFn_tp,type,
    whenFn: $i > w > $i ).

thf(pastFn_tp,type,    % Doesn't need a world.  Assume basic physics in all worlds.
    pastFn: $i > $i ).
    
thf(futureFn_tp,type,  % Doesn't need a world.  Assume basic physics in all worlds.
    futureFn: $i > $i ).
        
thf(dayFn_tp,type,
    dayFn: $i > $i > $i ).
    
thf(monthFn_tp,type,
    monthFn: $i > $i > $i ).
        
thf(yearFn_tp,type,
    yearFn: $i > $i ).

thf(governmentFn_tp,type,   % definitional, doesn't need a world
    governmentFn: $i > $i ).
                    
thf(attribute_tp,type,
    attribute: $i > $i > w > $o ).

thf(subOrganization_tp,type,
    subOrganization: $i > $i > w > $o ).
    
thf(instance_tp,type,       % constant domains, doesn't need a world
    instance: $i > $i > $o ).

thf(mIBUnit_tp,type,
    mIBUnit: $i ).
    
thf(organization_tp,type,
    organization: $i ).

thf(uSGovernment_tp,type,
    uSGovernment: $i ).
            
thf(unitedStates_tp,type,
    unitedStates: $i ).
                
thf(human_tp,type,
    human: $i ).

thf(agentSmith_tp,type,
    agentSmith: $i ).

thf(facility_tp,type,
    facility: $i ).
        
thf(area51_tp,type,
    area51: $i ).
        
thf(legalAction_tp,type,
    legalAction: $i ).

thf(n1_tp,type,
    n1: $i ).
    
thf(n2025_tp,type,
    n2025: $i ).
    
thf(lessThan_tp,type,    % Doesn't need a world.  Assume math in all worlds.
  lessThan: $i > $i > $o).
      
thf(entering_tp,type,
    entering: $i ).
    
thf(terminatingEmployment_tp,type,
    terminatingEmployment: $i ).    
                
thf(accreln_tp,type,
    accreln: m > $i > w > w > $o ).

thf(accreln2_tp,type,
    accreln2: m > $i > $i > w > w > $o ).
    
thf(currentworld_tp,type,
    cw: w ).

thf(month_tp,type,
  month: $i).
  
thf(succClass_tp,type,
  successorClass: $i > $i > $o).  
  
thf(jan_tp,type,
  january: $i).
thf(feb_tp,type,
  february: $i).  
thf(mar_tp,type,
  march: $i).
thf(apr_tp,type,
  april: $i).
thf(may_tp,type,
  may: $i).
thf(jun_tp,type,
  june: $i).
thf(july_tp,type,
  july: $i).
thf(aug_tp,type,
  august: $i).
thf(sep_tp,type,
  september: $i).
thf(oct_tp,type,
  october: $i).
thf(nov_tp,type,
  november: $i).
thf(dec_tp,type,
  december: $i).

thf(succJan,axiom,
  (successorClass @ january @ february)).
thf(succFeb,axiom,
  (successorClass @ february @ march)).
thf(succMar,axiom,
  (successorClass @ march @ april)).
thf(succApr,axiom,
  (successorClass @ april @ may)).
thf(succMay,axiom,
  (successorClass @ may @ june)).
thf(succJun,axiom,
  (successorClass @ june @ july)).
thf(succJul,axiom,
  (successorClass @ july @ august)).
thf(succAug,axiom,
  (successorClass @ august @ september)).
thf(succSep,axiom,
  (successorClass @ september @ october)).
thf(succOct,axiom,
  (successorClass @ october @ november)).
thf(succNov,axiom,
  (successorClass @ november @ december)).

thf(succTrans,axiom,
  (![C1:$i,C2:$i,C3:$i]:(
    ((successorClass @ C1 @ C2) &
     (successorClass @ C2 @ C3)) =>
       (successorClass @ C1 @ C3))) ).
             
thf(def1,axiom,
  (instance @ agentSmith @ human)).
  
thf(def2,axiom,
  (instance @ area51 @ facility)).
  
% time stuff.  Temporal relations between times are true in all worlds

thf(duringDay,axiom,
  (![D:$i,M:$i,T1:$i,T2:$i,Y:$i]:(
    ((T1 = (dayFn @ D @ (monthFn @ M @ (yearFn @ Y)))) &
     (T2 = (monthFn @ M @ (yearFn @ Y)))) =>
       (during @ T1 @ T2)))).

thf(duringDayYear,axiom,
  (![D:$i,M:$i,T1:$i,T2:$i,Y:$i]:(
    ((T1 = (dayFn @ D @ (monthFn @ M @ (yearFn @ Y)))) &
     (T2 = (yearFn @ Y))) =>
       (during @ T1 @ T2)))).
       
thf(duringMonth,axiom,
  (![M:$i,T1:$i,T2:$i,Y:$i]:(
    ((T1 = (monthFn @ M @ (yearFn @ Y))) &
     (T2 = (yearFn @ Y))) =>
       (during @ T1 @ T2)))).
              
thf(earlierMonth,axiom,
  (![M1:$i,M2:$i,T1:$i,T2:$i,Y:$i]:(
    ((successorClass @ M1 @ M2) &
     (T1 = (monthFn @ M1 @ (yearFn @ Y))) &
     (T2 = (monthFn @ M2 @ (yearFn @ Y)))) =>
       (earlier @ T1 @ T2)))).

thf(earlierMonthDay,axiom,
  (![D1:$i,D2:$i,M1:$i,M2:$i,T1:$i,T2:$i,Y:$i]:(
    ((successorClass @ M1 @ M2) &
     (T1 = (dayFn @ D1 @ (monthFn @ M1 @ (yearFn @ Y)))) &
     (T2 = (dayFn @ D2 @ (monthFn @ M2 @ (yearFn @ Y))))) =>
       (earlier @ T1 @ T2)))).
       
thf(earlierYear,axiom,
  (![T1:$i,T2:$i,Y1:$i,Y2:$i]:(
    ((lessThan @ Y1 @ Y2) &
     (T1 = (yearFn @ Y1)) &
     (T2 = (yearFn @ Y2))) =>
       (earlier @ T1 @ T2)))).
              
thf(earlierYearMonth,axiom,
  (![M1:$i,M2:$i,T1:$i,T2:$i,Y1:$i,Y2:$i]:(
    ((lessThan @ Y1 @ Y2) &
     (T1 = (monthFn @ M1 @ (yearFn @ Y1))) &
     (T2 = (monthFn @ M2 @ (yearFn @ Y2)))) =>
       (earlier @ T1 @ T2)))).

thf(earlierYearDay,axiom,
  (![D1:$i,D2:$i,M1:$i,M2:$i,T1:$i,T2:$i,Y1:$i,Y2:$i]:(
    ((lessThan @ Y1 @ Y2) &
     (T1 = (dayFn @ D1 @ (monthFn @ M1 @ (yearFn @ Y1)))) &
     (T2 = (dayFn @ D2 @ (monthFn @ M2 @ (yearFn @ Y2))))) =>
       (earlier @ T1 @ T2)))).

thf(earlierDay,axiom,
  (![D1:$i,D2:$i,M:$i,T1:$i,T2:$i,Y:$i]:(
    ((lessThan @ D1 @ D2) &
     (T1 = (dayFn @ D1 @ (monthFn @ M @ (yearFn @ Y)))) &
     (T2 = (dayFn @ D2 @ (monthFn @ M @ (yearFn @ Y))))) =>
       (earlier @ T1 @ T2)))).
          
                            
% Agent Smith enters Area 51 on April 1, 2025.

thf(smithEnters,axiom,
  (![E:$i,W:w]:(
    ((instance @ E @ entering) &
     (agent @ E @ agentSmith @ W) &
     (destination @ E @ area51 @ W) &
     (during @
       (whenFn @ E @ W) @
       (dayFn @ n1 @ (monthFn @ april @ (yearFn @ n2025)))))))).
      
      
% Agent Smith works for the MIB unit.

thf(mibOrg,axiom,
  (instance @ mIBUnit @ organization)).
  
thf(agentMIB,axiom,
  (![W:w]:
    (employs @ agentSmith @ mIBUnit @ W))).


% The MIB unit is part of the US Federal Government. 

thf(govUS,axiom,
  (uSGovernment = (governmentFn @ unitedStates))).
  
thf(subUS,axiom,
  (![W:w]:
    (subOrganization @ mIBUnit @ uSGovernment @ W))).


% The US government obliges Agent Smith not to enter Area 51.

thf(confObSmth,axiom,
  (![W:w,W2:w]:(   
    ((accreln2 @ confersObligation @ uSGovernment @ agentSmith @ W @ W2) => 
      (~(?[E:$i]:(
         ((instance @ E @ entering) &
          (agent @ E @ agentSmith @ W2) &
          (destination @ E @ area51 @ W2))))))))).


% Agents that violate their obligations have a US government disciplinary hearing.

thf(notObDisc,axiom,
  (![W:w,W2:w,F:w>$o,A:$i,H:$i]:(
    (((accreln2 @ confersObligation @ uSGovernment @ A @ W @ W2) => (F @ W2)) &
     (~(F @ W))) =>
       ((instance @ H @ legalAction) &
        (plaintiff @ H @ uSGovernment @ W) &
        (defendant @ H @ A @ W))))).


% Agents that violate their obligations are fired after a US government disciplinary hearing.

thf(notObFire,axiom,
  (![W:w,W2:w,F:w>$o,A:$i,H:$i]:(
    (((accreln2 @ confersObligation @ uSGovernment @ A @ W @ W2) => (F @ W2)) &
     (~(F @ W)) &
      (instance @ H @ legalAction) &
      (plaintiff @ H @ uSGovernment @ W) &
      (defendant @ H @ A @ W)) =>
    (?[FIRE:$i]:(
      ((instance @ FIRE @ terminatingEmployment) &
       (earlier @
         (whenFn @ H @ W) @
         (whenFn @ FIRE @ W)) &
       (patient @ FIRE @ A @ W))))))).
    
    
% People employed by an org that fires them are not employed by the org after then.
% (This is a simplification since they could be rehired.)
  
thf(fireNotEmployed,axiom,      
  (![W:w,W2:w,FIRE:$i,ORG:$i,A:$i]:(
    ((instance @ FIRE @ terminatingEmployment) &
     (agent @ FIRE @ ORG @ W) &
     ((accreln @ holdsDuring @ (pastFn @ (whenFn @ FIRE @ W)) @ W @ W2) => 
       (employs @ ORG @ A @ W2)) &
     (suffers @ FIRE @ A @ W)) =>
       ((accreln @ holdsDuring @ (futureFn @ (whenFn @ FIRE @ W)) @ W @ W2) =>
        (~(employs @ ORG @A @ W2)))))).
       
       
% Agent Smith is brought before a US government disciplinary hearing in June 2025.

thf(smithDisc,axiom,
  (![W:w,H:$i,A:$i]:(
    ((instance @ H @ legalAction) &
     (plaintiff @ H @ uSGovernment @ W) &
     (defendant @ H @ A @ W) &
     (during @ 
       (whenFn @ H @ W) @
       (monthFn @ june @ (yearFn @ n2025))))))).
      
      
% A person employed by an organization is employed by its parent organization at least at
% the same time.

thf(empParentOrg,axiom,
  ![W:w,W2:w,ORG:$i,SUPER:$i,T:$i,A:$i]:(
    (((accreln @ holdsDuring @ T @ W @ W2) => 
        (employs @ ORG @ A @ W2)) &
     (subOrganization @ ORG @ SUPER @ W)) =>
       ((accreln @ holdsDuring @ T @ W @ W2) => 
         (employs @ SUPER @ A @ W2)))).
    
    
% Does Agent Smith work for the MIB unit in July 2025?

%thf(conj,conjecture,
%  ![W:w]:(
%    ((accreln @ holdsDuring @ (MonthFn July (YearFn 2025)) @ cw @ W) => 
%      (employs @ mIBUnit @ agentSmith @ W)))).
  
% Does Agent Smith get disciplined?
  
thf(conj,conjecture,
  ?[D:$i]:(
    ((instance @ D @ legalAction) & 
     (defendant @ D @ agentSmith @ cw)))).  
